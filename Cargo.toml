[workspace]
resolver = "2"
members = ["crates/*"]

[workspace.package]
edition = "2021"
license = "MIT OR Apache-2.0"
rust-version = "1.81"

[workspace.lints.clippy]
undocumented_unsafe_blocks = { level = "warn" }

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ["cfg(doc_cfg)"] }

[workspace.dependencies]
allocator-api2 = { version = "0.2.21", default-features = false, features = ["alloc"] }
bumpalo = { version = "3.18.1", features = ["allocator-api2", "collections"] }
criterion = "0.7.0"
daft = { version = "0.1.3", default-features = false }
equivalent = "1.0.2"
expectorate = "1.2.0"
foldhash = "0.1.5"
# We have to turn on hashbrown's allocator-api2 feature even if we don't expose
# it in our public API. There's no way to refer to the hashbrown Allocator trait
# without it. (The alternative would be to define everything twice: if
# allocator-api2 is turned on, then for e.g. IdHashMap<T, S, A>, otherwise
# IdHashMap<T, S>.)
hashbrown = { version = "0.15.4", default-features = false, features = ["allocator-api2", "inline-more"] }
hugealloc = "0.1.1"
iddqd = { path = "crates/iddqd", default-features = false }
iddqd-test-utils = { path = "crates/iddqd-test-utils" }
proptest = { version = "1.7.0", default-features = false, features = ["std"] }
ref-cast = "1.0.24"
rustc-hash = { version = "2.1.1", default-features = false }
schemars = "0.8.22"
serde = "1.0.219"
serde_json = "1.0.140"
test-strategy = "0.4.3"
typify = "0.4.2"

[profile.dev]
# Builds with opt-level 1 speed up test runs by around 20x.
opt-level = 1
