on:
  push:
    branches:
      - main
  pull_request:

name: CI

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        partition: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          key: partition-${{ matrix.partition }}
      - name: Install just, cargo-hack, and cargo-sync-rdme
        uses: taiki-e/install-action@v2
        with:
          tool: just,cargo-hack,cargo-sync-rdme
      - name: Lint (clippy)
        run: just powerset --partition ${{ matrix.partition }}/10 clippy --all-targets
      - name: Lint (rustfmt)
        run: cargo xfmt --check
      - name: Run rustdoc
        run: just rustdoc
      # Pin to a specific nightly for compatibility with cargo-sync-rdme.
      - name: Install nightly toolchain for cargo-sync-rdme
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-06-21
      - name: Regenerate readmes
        run: just generate-readmes
      - name: Check for differences
        run: git diff --exit-code
    
  build-and-test:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # 1.81 is the MSRV
        rust-version: ["1.81", "stable"]
        partition: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]
      fail-fast: false
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          key: partition-${{ matrix.partition }}
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@just
      - uses: taiki-e/install-action@nextest
      - name: Build
        run: just powerset --partition ${{ matrix.partition }}/10 build
      - name: Run tests
        run: just powerset --partition ${{ matrix.partition }}/10 nextest run
      - name: Doctests
        run: just powerset --partition ${{ matrix.partition }}/10 test --doc
        
  build-no-std:
    name: Build on no-std
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # 1.81 is the MSRV
        rust-version: ["1.81", "stable"]
      fail-fast: false
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
      - uses: taiki-e/install-action@cross
      - name: Check
        run: cross check --target thumbv7em-none-eabi --no-default-features -p iddqd

  miri:
    name: Run tests with miri
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: miri
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@nextest
      # Run tests for all crates containing unsafe code. Currently, that's just
      # iddqd.
      - name: Run tests
        run: cargo +nightly miri nextest run -p iddqd
      - name: Doctests
        run: cargo +nightly miri test --doc -p iddqd
